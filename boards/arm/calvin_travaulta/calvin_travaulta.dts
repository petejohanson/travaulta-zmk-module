/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

/dts-v1/;
#include <st/f4/stm32f401Xc.dtsi>
#include <st/f4/stm32f401c(b-c)ux-pinctrl.dtsi>

#include <zephyr/dt-bindings/dt-util.h>
#include <zephyr/dt-bindings/adc/adc.h>

#include <dt-bindings/zmk/matrix_transform.h>

&adc1 {
	status = "okay";

	pinctrl-0 = <&adc1_in3_pa3>;
	pinctrl-names = "default";

	#address-cells = <1>;
	#size-cells = <0>;

	st,adc-clock-source = <SYNC>;
	st,adc-prescaler = <4>;

	channel@3 {
		reg = <3>;
		zephyr,gain = "ADC_GAIN_1";
		zephyr,reference = "ADC_REF_INTERNAL";
		zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
		zephyr,resolution = <12>;
	};
};

&pinctrl {
    ec_pin1: ec_pin1 {
        pinmux = <STM32_PINMUX('B', 12, GPIO)>;

        slew-rate = "very-high-speed";
    };

    ec_pin2: ec_pin2 {
        pinmux = <STM32_PINMUX('B', 13, GPIO)>;

        slew-rate = "very-high-speed";
    };

    ec_pin3: ec_pin3 {
        pinmux = <STM32_PINMUX('B', 14, GPIO)>;

        slew-rate = "very-high-speed";
    };

    ec_pin4: ec_pin4 {
        pinmux = <STM32_PINMUX('B', 15, GPIO)>;

        slew-rate = "very-high-speed";
    };
};

/ {
    model = "Travaulta";
    compatible = "calvin,travaulta", "st,stm32f401";

    chosen {
        zephyr,sram = &sram0;
        zephyr,flash = &flash0;
        zmk,kscan = &matrix;
        zmk,matrix_transform = &transform;
    };

    transform: transform {
        compatible = "zmk,matrix-transform";
        rows = <4>;
        columns = <11>;

        map = <
        RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10)
        RC(1,0)  RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8)    RC(1,9)
        RC(2,0)   RC(2,1) RC(2,2) RC(2,3) RC(2,4)     RC(2,5) RC(2,6) RC(2,7) RC(2,8)  RC(2,9)
                     RC(3,1) RC(3,2)   RC(3,3)     RC(3,5)   RC(3,7)  RC(3,8)
        >;
    };

    left_mux: left_mux {
    	compatible = "zmk,gpio-mux";

        select-gpios
            = <&gpiob 5 GPIO_ACTIVE_HIGH>
            , <&gpiob 4 GPIO_ACTIVE_HIGH>
            , <&gpiob 3 GPIO_ACTIVE_HIGH>
            ;

        en-gpios = <&gpiob 0 GPIO_ACTIVE_LOW>;

        gpio-controller;
        ngpios = <8>;
        #gpio-cells = <2>;
    };

    right_mux: right_mux {
    	compatible = "zmk,gpio-mux";

        select-gpios
            = <&gpiob 5 GPIO_ACTIVE_HIGH>
            , <&gpiob 4 GPIO_ACTIVE_HIGH>
            , <&gpiob 3 GPIO_ACTIVE_HIGH>
            ;

        en-gpios = <&gpiob 1 GPIO_ACTIVE_LOW>;

        gpio-controller;
        ngpios = <8>;
        #gpio-cells = <2>;
    };

    matrix: matrix {
        pinctrl-0 = <&ec_pin1 &ec_pin2 &ec_pin3 &ec_pin4>;
        pinctrl-names = "default";
        compatible = "zmk,kscan-ec-matrix";
        input-gpios
            = <&left_mux 2 0>
            , <&left_mux 1 0>
            , <&left_mux 0 0>
            , <&left_mux 3 0>
            , <&left_mux 4 0>
            , <&right_mux 2 0>
            , <&right_mux 1 0>
            , <&right_mux 0 0>
            , <&right_mux 3 0>
            , <&right_mux 4 0>
            , <&right_mux 5 0>
        ;
        strobe-gpios
            = <&gpiob 13 GPIO_ACTIVE_HIGH>
            , <&gpiob 14 GPIO_ACTIVE_HIGH>
            , <&gpiob 15 GPIO_ACTIVE_HIGH>
            , <&gpiob 12 GPIO_ACTIVE_HIGH>
            ;
        io-channels = <&adc1 3>;
        matrix-relax-us = <1>;
        strobe-input-masks = <0 BIT(10) BIT(10) (BIT(0) + BIT(4) + BIT(6) + BIT(9) + BIT(10))>;
        drain-gpios = <&gpioa 4 GPIO_OPEN_DRAIN>;
    };
};

zephyr_udc0: &usbotg_fs {
	pinctrl-0 = <&usb_otg_fs_dm_pa11 &usb_otg_fs_dp_pa12>;
	pinctrl-names = "default";
	status = "okay";
};

// Enable all the clocks!
&clk_lsi {
    status = "okay";
};

&clk_hse {
	hse-bypass;
	clock-frequency = <DT_FREQ_M(8)>;
	status = "okay";
};

&pll {
    div-m = <8>;
    mul-n = <384>;
    div-p = <4>;
    div-q = <8>;
    clocks = <&clk_hsi>;
    status = "okay";
};

&rcc {
    clocks = <&pll>;
    clock-frequency = <DT_FREQ_M(96)>;
    ahb-prescaler = <1>;
    apb1-prescaler = <2>;
    apb2-prescaler = <1>;
};

&rtc {
    status = "okay";
};

&flash0 {
    /*
     * For more information, see:
     * http: //docs.zephyrproject.org/latest/guides/dts/index.html#flash-partitions
     */
    partitions {
        compatible = "fixed-partitions";
        #address-cells = <1>;
        #size-cells = <1>;

        /* Set 6Kb of storage at the end of the 256Kb of flash */
        storage_partition: partition@3e800 {
            label = "storage";
            reg = <0x0003e800 DT_SIZE_K(6)>;
        };
    };
};
